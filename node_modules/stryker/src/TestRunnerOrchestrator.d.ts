/// <reference types="es6-promise" />
import { StrykerOptions, InputFile } from 'stryker-api/core';
import { RunResult } from 'stryker-api/test_runner';
import { TestSelector } from 'stryker-api/test_selector';
import Mutant from './Mutant';
import { Reporter, MutantResult } from 'stryker-api/report';
export default class TestRunnerOrchestrator {
    private options;
    private files;
    private testSelector;
    private reporter;
    constructor(options: StrykerOptions, files: InputFile[], testSelector: TestSelector, reporter: Reporter);
    initialRun(): Promise<RunResult[]>;
    private initalRunWithoutTestSelector();
    private initialRunWithTestSelector();
    runMutations(mutants: Mutant[]): Promise<MutantResult[]>;
    private reportAllMutantsTested(results);
    private calculateTimeout(baseTimeout);
    private collectFrozenMutantResult(mutant, runResult?);
    private runSingleTestsRecursive(sandbox, runResults, currentTestIndex);
    private createTestRunnerSandboxes();
    private selectTestsIfPossible(sandbox, ids);
    private createInitializedSandbox(index);
    private createTempFolder();
    private createTestSelectorFileName(folder);
    private copyAllFilesToFolder(folder);
    private createTestRunner(files, coverageEnabled, testSelectionFilePath?, index?);
}
